{"version":3,"sources":["components/card-item/card-item.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardItem","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Search","type","placeholder","required","onChange","changeHandler","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAW,SAACC,GACvB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCNXC,EAAW,SAACR,GACvB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,GAAD,OAClB,cAAC,EAAD,CAAUA,QAASA,GAAcA,EAAQC,YCNtCO,G,MAAS,SAACX,GACrB,OACE,qBAAKC,UAAU,SAAf,SACE,uBACEW,KAAK,SACLC,YAAab,EAAMa,YACnBC,UAAQ,EACRC,SAAUf,EAAMgB,oBCuCTC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAkBFD,cAAgB,SAACE,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACL,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAQhC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAEZU,EAAmBrB,EAASsB,QAAO,SAAC5B,GAAD,OACvCA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,qCACE,kDACA,cAAC,EAAD,CACEnB,YAAY,kBACZG,cAAea,KAAKb,gBAEtB,cAAC,EAAD,CAAUP,SAAUqB,IANtB,W,GAhCYI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.82691b25.chunk.js","sourcesContent":["import \"./card-item.styles.css\";\n\nexport const CardItem = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.monster.name}</h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.css\";\nimport { CardItem } from \"../card-item/card-item.component\";\n\nexport const CardList = (props) => {\n  return (\n    <>\n      <div className=\"card-list\">\n        {props.monsters.map((monster) => (\n          <CardItem monster={monster} key={monster.id} />\n        )) }\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./search.styles.css\";\n\nexport const Search = (props) => {\n  return (\n    <div className=\"search\">\n      <input\n        type=\"search\"\n        placeholder={props.placeholder}\n        required\n        onChange={props.changeHandler}\n      />\n    </div>\n  );\n};\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { Search } from \"./components/search/search.component\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((users) => {\n        this.setState({ monsters: users });\n      });\n  }\n\n  changeHandler = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <>\n        <h1>Monsters Rolodex</h1>\n        <Search\n          placeholder=\"search monsters\"\n          changeHandler={this.changeHandler}\n        />\n        <CardList monsters={filteredMonsters}></CardList>;\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}